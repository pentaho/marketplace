<?xml version="1.0"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.pentaho</groupId>
    <artifactId>pentaho-marketplace-modules</artifactId>
    <version>10.3.0.0-311</version>
  </parent>
  <artifactId>pentaho-marketplace-ba</artifactId>
  <version>10.3.0.0-311</version>
  <packaging>bundle</packaging>
  <name>Pentaho Marketplace: ${project.artifactId}</name>
  <description>Pentaho Marketplace project</description>
  <url>http://www.pentaho.com/marketplace</url>
  <properties>
    <platform.version>10.3.0.0-311</platform.version>
  </properties>
  <dependencies>
    <dependency>
      <groupId>org.pentaho</groupId>
      <artifactId>${dependency.pentaho-marketplace-core.id}</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>pentaho</groupId>
      <artifactId>pentaho-platform-api</artifactId>
      <version>${platform.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>pentaho</groupId>
      <artifactId>pentaho-platform-core</artifactId>
      <version>${platform.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.osgi</groupId>
      <artifactId>osgi.core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.osgi</groupId>
      <artifactId>osgi.cmpn</artifactId>
    </dependency>
    <dependency>
      <groupId>commons-collections</groupId>
      <artifactId>commons-collections</artifactId>
    </dependency>
    <dependency>
      <groupId>org.hitachivantara.karaf.kar</groupId>
      <artifactId>org.hitachivantara.karaf.kar.core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.hitachivantara.karaf.features</groupId>
      <artifactId>org.hitachivantara.karaf.features.core</artifactId>
      <exclusions>
        <exclusion>
          <groupId>*</groupId>
          <artifactId>*</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-all</artifactId>
    </dependency>
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-all</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-core</artifactId>
    </dependency>
  </dependencies>
  <build>
    <resources>
      <resource>
        <filtering>false</filtering>
        <directory>src/main/resources</directory>
        <includes>
          <include>**/*</include>
        </includes>
        <excludes>
          <exclude>org.pentaho.marketplace.ba.plugin.res/**/*</exclude>
          <exclude>META-INF/**/*</exclude>
          <exclude>OSGI-INF/**/*</exclude>
          <exclude>web/*.html</exclude>
        </excludes>
      </resource>
      <resource>
        <filtering>true</filtering>
        <directory>src/main/resources</directory>
        <includes>
          <include>org.pentaho.marketplace.ba.plugin.res/**/*</include>
          <include>META-INF/**/*</include>
          <include>OSGI-INF/**/*</include>
          <include>web/*.html</include>
        </includes>
      </resource>
    </resources>
    <plugins>
      <plugin>
        <groupId>org.apache.felix</groupId>
        <artifactId>maven-bundle-plugin</artifactId>
        <extensions>true</extensions>
        <configuration>
          <instructions>
            <Bundle-SymbolicName>${project.artifactId}</Bundle-SymbolicName>
            <Bundle-Version>${project.version}</Bundle-Version>

            <Export-Package>org.pentaho.telemetry.*;-split-package:=merge-last</Export-Package>

            <!--
              Preventing transitive dependencies from forcing the import of a specific version of java.xml.bind.*.

              This allows the bundle to correctly function in different JRE versions; e.g. a version higher than 
              the one provided in jre.properties currently triggers the installation of jakarta.xml.bind-api (provided
              by the cxf-specs feature), causing classloading issues because JAXB (javax.xml.bind) doesn???t handle well
              multiple coexistent versions:
                In javax.xml.bind.ContextFinder::getContextClassLoader() it gets the ClassLoader from the current Thread (Thread.currentThread().getContextClassLoader()), effectively getting the main ClassLoader (or any other) 
                instead of the bundle???s ClassLoader.
             -->
            <Import-Package>!javax.xml.namespace, javax.xml.bind;version="[2.0.0,3.0.0)", javax.xml.bind.annotation;version="[2.0.0,3.0.0)", javax.xml.bind.annotation.adapters;version="[2.0.0,3.0.0)", org.apache.felix.http.api, *</Import-Package>

            <Private-Package>org.pentaho.marketplace.*;-split-package:=merge-last</Private-Package>

            <Provide-Capability>
              org.pentaho.webpackage;root=/web
            </Provide-Capability>
          </instructions>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-remote-resources-plugin</artifactId>
        <executions>
          <execution>
            <id>process-remote-resources</id>
            <goals>
              <goal>process</goal>
            </goals>
            <configuration>
              <resourceBundles>
                <resourceBundle>${project.groupId}:${dependency.pentaho-marketplace-core.id}:${project.version}</resourceBundle>
              </resourceBundles>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>attach-artifacts</id>
            <phase>package</phase>
            <goals>
              <goal>attach-artifact</goal>
            </goals>
            <configuration>
              <artifacts>
                <artifact>
                  <file>src/main/resources/cfg/pentaho.marketplace.ba.cfg</file>
                  <type>cfg</type>
                  <classifier>pentaho-marketplace-config</classifier>
                </artifact>
              </artifacts>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
